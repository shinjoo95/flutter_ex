* Lint 끄는 방법
-> analysis_options.yaml
rules :
  prefer_typing_uninitialized_variables: false
  prefer_const_constructors_in_immutables: false
  prefer_const_constructors: false
  avoid_print: false
  prefer_const_literals_to_create_immutables: false

* 스타일 적용 방법
- ThemeData()
    - 특징 : 위젝은 나랑 가까운 스타일을 가장 먼저 적용
    - 복잡한 위젝은 복잡한위젯Theme()안에서 스타일 줘야 됨
- ThemeData() 안의 버튼 스타일은 ?
    - textButtonTheme: TextButtonThemeData(
        style: TextButton.styleFrom(
            backgroundColor : Colors.grey;
        )
    )
- 레이아웃 중간에 ThemeData() 생성가능
      body: Theme(
          data: ThemeData(
            textTheme:
          ),
          child: Container()
- 원하는 ThemeData 안의 내용 불러오기
    - style : Theme.of(context).textTheme.bodyText2,)
        - ThemeData()찾아서 거기있던 textTheme > bodyText2 가져와달라는 뜻

* Text() 위젯 스타일을 결정하고 싶다면?
- Text()는 bodyText2 가져다 쓰고
- ListTile()은 subtitle1 가져다 쓰고
- TextButton()은 button 가져다 쓰고
- AppBar()는 headline6 가져다 씀

* import 하는 법
- 파일 만든 뒤 import
- import할 때 변수 중복 문제 피하기
    - 경로 뒤에 as 작명 한 뒤 변수명에 작명.변수명으로 중복 피할 수 있음
    - 변수를 다른파일에서 쓰기 싫으면 _변수명 _함수명 _클래스명